apply plugin: 'com.android.application'

android {
    signingConfigs {
        sign {
            keyAlias 'zhangwy'
            keyPassword 'zhangwy15010114402'
            storeFile file('/Users/zhangwy/work/sign')
            storePassword 'zhangwy15010114402'
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.zhangwy.integral"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            buildConfigField("boolean", "LOG_DEBUG", "true")
            minifyEnabled false
            signingConfig signingConfigs.sign
        }
        release {
            //不显示Log
            buildConfigField("boolean", "LOG_DEBUG", "false")
            //混淆
            minifyEnabled true
            //zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources true
            //签一部分代表系统默认的Android程序混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己定义的混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.sign
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "app_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                }
            }
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions 'default'

    productFlavors {
        "basic" {}
        "360" {}
        "yyb" {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${rootProject.ext.android.supportVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.ext.android.supportVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.android.ConstraintLayout}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:support-v4:${rootProject.ext.android.supportVersion}"
    testImplementation "junit:junit:${rootProject.ext.android.JUnitVersion}"
    androidTestImplementation "com.android.support.test:runner:${rootProject.ext.android.JUnitRunnerVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.ext.android.espressoVersion}"
    implementation "com.facebook.fresco:fresco:${rootProject.ext.thirdParty.fresco}"
    implementation "com.android.support:multidex:${rootProject.ext.android.multidex}"
    implementation "com.tencent.mm.opensdk:wechat-sdk-android-without-mta:${rootProject.ext.thirdParty.wechat}"
    implementation "com.alibaba:fastjson:${rootProject.ext.thirdParty.fastJson}"
    implementation "com.umeng.umsdk:analytics:${rootProject.ext.thirdParty.umeng}"
    implementation "com.umeng.umsdk:common:${rootProject.ext.thirdParty.umengCommon}"
    implementation project(path: ':libCore')
    implementation project(path: ':widget')
    implementation project(path: ':pickTime')
    implementation project(path: ':address')
    implementation project(path: ':user')
    implementation project(path: ':common')
    implementation project(path: ':http')
    implementation project(path: ':upgrade')
}
